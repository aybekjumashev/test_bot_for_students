# Generated by Django 5.2.1 on 2025-05-27 20:42

import core.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=100, verbose_name="Nomi (O'zbekcha)")),
                ('name_kaa', models.CharField(max_length=100, verbose_name='Nomi (Qoraqalpoqcha)')),
                ('name_ru', models.CharField(max_length=100, verbose_name='Nomi (Ruscha)')),
            ],
            options={
                'verbose_name': "Ta'lim bosqichi (OTM)",
                'verbose_name_plural': "Ta'lim bosqichlari (OTM)",
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='EducationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=100, verbose_name="Nomi (O'zbekcha)")),
                ('name_kaa', models.CharField(max_length=100, verbose_name='Nomi (Qoraqalpoqcha)')),
                ('name_ru', models.CharField(max_length=100, verbose_name='Nomi (Ruscha)')),
                ('is_otm', models.BooleanField(default=False, verbose_name='Bu OTMmi?')),
            ],
            options={
                'verbose_name': "Ta'lim muassasasi turi",
                'verbose_name_plural': "Ta'lim muassasasi turlari",
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=150, verbose_name="Nomi (O'zbekcha)")),
                ('name_kaa', models.CharField(max_length=150, verbose_name='Nomi (Qoraqalpoqcha)')),
                ('name_ru', models.CharField(max_length=150, verbose_name='Nomi (Ruscha)')),
                ('min_course_year', models.PositiveSmallIntegerField(default=1, verbose_name='Minimal kurs/bosqich')),
                ('max_course_year', models.PositiveSmallIntegerField(default=11, verbose_name='Maksimal kurs/bosqich')),
                ('voucher_template_name', models.CharField(blank=True, help_text="Voucher rasmi uchun shablon nomi (masalan, Matematika -> VoucherMatematika). Agar bo'sh bo'lsa, standart ishlatiladi.", max_length=50, null=True, verbose_name='Voucher shabloni nomi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
            ],
            options={
                'verbose_name': 'Fan',
                'verbose_name_plural': 'Fanlar',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=255, verbose_name="Nomi (O'zbekcha)")),
                ('name_kaa', models.CharField(max_length=255, verbose_name='Nomi (Qoraqalpoqcha)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Nomi (Ruscha)')),
                ('education_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.educationtype', verbose_name="Ta'lim turi")),
            ],
            options={
                'verbose_name': "Ta'lim muassasasi",
                'verbose_name_plural': "Ta'lim muassasalari",
                'ordering': ['education_type', 'name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=255, verbose_name="Nomi (O'zbekcha)")),
                ('name_kaa', models.CharField(max_length=255, verbose_name='Nomi (Qoraqalpoqcha)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Nomi (Ruscha)')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.institution', verbose_name="Ta'lim muassasasi")),
            ],
            options={
                'verbose_name': 'Fakultet',
                'verbose_name_plural': 'Fakultetlar',
                'ordering': ['institution', 'name_uz'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Telegram Username')),
                ('full_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Ism va sharif')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Telefon raqami')),
                ('language_code', models.CharField(choices=[('uz', 'Uzbek'), ('kaa', 'Karakalpak'), ('ru', 'Russian')], default='uz', max_length=3, verbose_name='Til')),
                ('course_year', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Kurs (bosqich)')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan sana')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('education_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.educationlevel', verbose_name="Ta'lim bosqichi (OTM)")),
                ('education_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.educationtype', verbose_name="Ta'lim muassasasi turi")),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.faculty', verbose_name='Fakultet (OTM)')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.institution', verbose_name='Muassasa nomi')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_file', models.FileField(upload_to=core.models.question_file_path, verbose_name='Savol fayli (DOCX)')),
                ('correct_answer', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, verbose_name="To'g'ri javob")),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.subject', verbose_name='Fan')),
            ],
            options={
                'verbose_name': 'Savol',
                'verbose_name_plural': 'Savollar',
                'ordering': ['subject', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Boshlangan vaqti')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Tugatilgan vaqti')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Natija (ball)')),
                ('time_spent_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sarflangan vaqt (sekund)')),
                ('voucher_sent', models.BooleanField(default=False, verbose_name='Voucher yuborildimi?')),
                ('voucher_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Voucher kodi/raqami')),
                ('questions', models.ManyToManyField(related_name='tests', to='core.question', verbose_name='Berilgan savollar')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='core.subject', verbose_name='Fan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Testlar',
                'ordering': ['-started_at'],
            },
        ),
    ]
